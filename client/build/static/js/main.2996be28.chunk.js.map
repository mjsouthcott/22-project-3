{"version":3,"sources":["utils/API.js","pages/Login.js","utils/UserContext.js","pages/Profile.js","components/CreateRepairRequestForm/index.js","pages/CreateRepairRequest.js","components/listItems/index.js","components/LayoutCanvas/index.js","components/Unauthorized/index.js","components/WelcomeAlbum/index.js","components/Title/index.js","components/BarChartsRequestByTechnician/index.js","components/BarChartsTacticalSituation/index.js","components/PieCharts/index.js","components/WebMapView/index.js","components/LegendTable/index.js","components/Dashboard/index.js","components/CreateUserForm/index.js","pages/CreateUser.js","utils/operatorRanks.js","utils/technicianRanks.js","utils/operatorOccupations.js","utils/technicianOccupations.js","components/CreateVehicleForm/index.js","pages/CreateVehicle.js","utils/operatorVehicles.js","utils/technicianVehicles.js","components/UserTable/index.js","pages/DisplayUsers.js","components/VehicleAvatar/index.js","components/AssignOccupantInput/index.js","components/VehicleTable/index.js","pages/DisplayVehicles.js","components/AssignTechnicianInput/index.js","components/RepairRequestTable/index.js","pages/DisplayRepairRequests.js","App.js","serviceWorker.js","index.js"],"names":["API","isLoggedIn","axios","get","login","user","post","concat","username","logout","updateUserPassword","password","patch","getUsers","getUser","userId","getOperators","getTechnicians","getDismountedOperators","getDismountedTechnicians","getAvailableTechnicians","updateUserDismountedStatus","newDismountedStatus","mounted","updateUserAvailableStatus","newAvailableStatus","available","saveUser","userData","getVehicles","getVehicle","vehicleId","getOperatorVehicles","getTechnicianVehicles","getVehicleByOccupant","updateVehicleServiceableStatus","newServiceableStatus","serviceable","updateVehicleOccupant","newUserId","occupant","updateVehicleRepairRequests","newRepairRequestIdArray","repairRequests","saveVehicle","vehicleData","getRepairRequests","getRepairRequest","repairRequestId","getRepairRequestByTechnician","updateRepairRequestStatus","newStatus","status","updateRepairRequestAssignedTo","newTechnicianId","assignedTo","updateRepairRequestRepairWorkOrder","newRepairWorkOrderId","repairWorkOrder","saveRepairRequest","repairRequestData","getRepairWorkOrders","saveRepairWorkOrder","repairWorkOrderData","to","require","Copyright","react_default","a","createElement","Typography","variant","color","align","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","paddingTop","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Login","props","classes","_useState","useState","_useState2","Object","slicedToArray","error","setError","Container","component","maxWidth","CssBaseline","className","formik_esm","initialValues","onSubmit","values","lower","then","res","handleLogin","data","catch","err","_ref","errors","touched","FormGroup","formGroup","as","TextField","name","label","required","fullWidth","autoComplete","autoFocus","type","id","Button","Alert","severity","style","opacity","onClose","Box","mt","UserContext","React","createContext","_id","role","rank","firstName","lastName","occupation","root","padding","card","items","details","button","marginLeft","Profile","rest","objectWithoutProperties","userInfo","useContext","oldPassword","newPassword","confirm","setPassword","_useState3","message","_useState4","handlePasswordChange","event","objectSpread","defineProperty","target","value","Grid","container","item","xl","md","sm","Card","assign","clsx","noValidate","CardContent","gutterBottom","locationText","Divider","List","ListItem","ListItemAvatar","KeyboardCapslock_default","ListItemText","AccountBox_default","DriveEta_default","CardHeader","subheader","title","onChange","CardActions","onClick","RepairRequestForm","currentLocation","setCurrentLocation","useEffect","navigator","geolocation","getCurrentPosition","pos","latitude","coords","longitude","vehicleConditionClasses","vehicleMovementOptions","tacticalSituationStatuses","typography","marginBottom","errorMessage","_React$useState","_React$useState2","open","setOpen","RepairRequestFormSchema","Yup","shape","description","min","max","estimatedConditionClass","vehicleCanBeMovedBy","localTacticalSituation","crewRemainedWithVehicle","validationSchema","resetForm","repairRequest","location","repairRequestIdArray","vehicle","map","toConsumableArray","setTimeout","_ref2","select","conditionClass","MenuItem","key","option","icon","Check_default","fontSize","hidden","CreateRepairRequest","setVehicle","currentUser","targetVehicle","find","CreateRepairRequestForm","opsManagerListItems","Link","ListItemIcon","People_default","primary","AirportShuttle_default","Pageview_default","maintenanceManagerListItems","Dashboard_default","operatorListItems","Assignment_default","technicianListItems","Navigation","toolbar","paddingRight","toolbarIcon","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","menuButtonHidden","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","paddingBottom","fixedHeight","menuListItems","AppBar","Toolbar","IconButton","edge","aria-label","Menu_default","noWrap","window","href","AccountCircle_default","signOutButton","Input_default","Drawer","ChevronLeft_default","children","Unauthorized","Avatar","LockOutlined_default","heroContent","background","heroButtons","WelcomeAlbum","Fragment","paragraph","Title","BarCharts","chartData","setChartData","dataArray","requests","techNameArray","techName","forEach","element","includes","ele","push","es6","strokeDasharray","dataKey","fill","Name","Hostile","Safe","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","x","cos","y","sin","textAnchor","dominantBaseline","toFixed","PieCharts","openOrderNum","progressOrderNum","finishedOrderNum","labelLine","entry","index","length","WebMapView","mapRef","useRef","mapSymbols","setMapSymbols","loadModules","css","ArcGISMap","MapView","Graphic","GraphicsLayer","BasemapToggle","CoordinateConversion","basemap","view","current","center","zoom","pointGraphics","symbolObj","undefined","registrationNumber","callSign","userName","vehicleType","point","graphic","geometry","symbol","size","popupTemplate","graphicLayer","graphics","add","toggle","nextBasemap","ui","ccWidget","ref","table","createData","calories","fat","carbs","protein","rows","borderRadius","borderLeft","borderRight","borderBottom","LegendTable","TableContainer","Table","TableHead","TableRow","TableCell","fontWeight","TableBody","row","scope","Dashboard","fixedHeightPaper","xs","lg","Paper","BarChartsTacticalSituation_BarCharts","WebMapView_WebMapView","UserForm","formTitle","ranks","occupations","UserFormSchema","matches","trim","operatorRanks","technicianRanks","operatorOccupations","technicianOccupations","getProps","currentRole","CreateUser","CreateUserForm","VehicleForm","vehicles","VehicleFormSchema","selectedVehicle","upper","iconSrc","operatorVehicles","technicianVehicles","CreateVehicle","CreateVehicleForm","minWidth","getRankIconSrc","UserTable","pageTitle","users","src","alt","Chip","DisplayUsers","setUsers","components_UserTable","VehicleAvatar","img","imageWidth","AssignOccupantInput","targetUser","dismountedUsers","updateVehicles","updateDismountedUsers","getVehicleIconBackgroundColor","slice","VehicleTable","components_VehicleAvatar","components_AssignOccupantInput","DisplayVehicles","setVehicles","setDismountedUsers","components_VehicleTable","userObject","newVehicles","newDismountedUsers","filter","AssignTechnicianInput","technician","availableTechnicians","updateAvailableTechnicians","RepairRequestTable","number","components_AssignTechnicianInput","DisplayRepairRequests","setAvailableTechnicians","filteredVehicles","console","log","components_RepairRequestTable","newAvailableTechnicians","App","userState","setUserState","Error","BrowserRouter","utils_UserContext","Provider","Switch","Route","exact","path","Dashboard_Dashboard","pages_DisplayUsers","pages_DisplayVehicles","pages_DisplayRepairRequests","pages_CreateRepairRequest","CreateRepairWorkOrder_default","pages_CreateUser","pages_CreateVehicle","Boolean","hostname","match","ReactDOM","render","StrictMode","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2996be28.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n  // Login methods\n  isLoggedIn: function () {\n    return axios.get(\"/api/login/\");\n  },\n\n  login: function (user) {\n    return axios.post(`/api/login/${user.username}`, user);\n  },\n  logout: function () {\n    return axios.get(`/api/login/logout`);\n  },\n\n  updateUserPassword: function (password) {\n    return axios.patch(\"/api/login/password\", password);\n  },\n\n  // User methods\n  getUsers: function () {\n    return axios.get(\"/api/users\");\n  },\n\n  getUser: function (userId) {\n    return axios.get(`/api/users/${userId}`);\n  },\n\n  getOperators: function () {\n    return axios.get(\"/api/users?role=Operator\");\n  },\n\n  getTechnicians: function () {\n    return axios.get(\"/api/users?role=Technician\");\n  },\n\n  getDismountedOperators: function () {\n    return axios.get(\"/api/users?role=Operator&mounted=false\");\n  },\n\n  getDismountedTechnicians: function () {\n    return axios.get(\"/api/users?role=Technician&mounted=false\");\n  },\n\n  getAvailableTechnicians: function () {\n    return axios.get(\"/api/users?role=Technician&available=true\");\n  },\n\n  updateUserDismountedStatus: function (userId, newDismountedStatus) {\n    return axios.patch(`/api/users/${userId}`, {\n      mounted: newDismountedStatus,\n    });\n  },\n\n  updateUserAvailableStatus: function (userId, newAvailableStatus) {\n    return axios.patch(`/api/users/${userId}`, {\n      available: newAvailableStatus,\n    });\n  },\n\n  saveUser: function (userData) {\n    return axios.post(\"/api/users\", userData);\n  },\n\n  // Vehicle methods\n  getVehicles: function () {\n    return axios.get(\"/api/vehicles\");\n  },\n\n  getVehicle: function (vehicleId) {\n    return axios.get(`/api/vehicles/${vehicleId}`);\n  },\n\n  getOperatorVehicles: function () {\n    return axios.get(\"/api/vehicles?role=Operator\");\n  },\n\n  getTechnicianVehicles: function () {\n    return axios.get(\"/api/vehicles?role=Technician\");\n  },\n\n  getVehicleByOccupant: function (userId) {\n    return axios.get(`/api/vehicles?assignedTo=${userId}`);\n  },\n\n  updateVehicleServiceableStatus: function (vehicleId, newServiceableStatus) {\n    return axios.patch(`/api/vehicles/${vehicleId}`, {\n      serviceable: newServiceableStatus,\n    });\n  },\n\n  updateVehicleOccupant: function (vehicleId, newUserId) {\n    return axios.patch(`/api/vehicles/${vehicleId}`, {\n      occupant: newUserId,\n    });\n  },\n\n  updateVehicleRepairRequests: function (vehicleId, newRepairRequestIdArray) {\n    return axios.patch(`/api/vehicles/${vehicleId}`, {\n      repairRequests: newRepairRequestIdArray,\n    });\n  },\n\n  saveVehicle: function (vehicleData) {\n    return axios.post(\"/api/vehicles\", vehicleData);\n  },\n\n  // Repair Request methods\n  getRepairRequests: function () {\n    return axios.get(\"/api/repair-requests\");\n  },\n\n  getRepairRequest: function (repairRequestId) {\n    return axios.get(`/api/repair-requests/${repairRequestId}`);\n  },\n\n  getRepairRequestByTechnician: function (userId) {\n    return axios.get(`/api/repair-requests?assignedTo=${userId}`);\n  },\n\n  updateRepairRequestStatus: function (repairRequestId, newStatus) {\n    return axios.patch(`/api/repair-requests/${repairRequestId}`, {\n      status: newStatus,\n    });\n  },\n\n  updateRepairRequestAssignedTo: function (repairRequestId, newTechnicianId) {\n    return axios.patch(`/api/repair-requests/${repairRequestId}`, {\n      assignedTo: newTechnicianId,\n    });\n  },\n\n  updateRepairRequestRepairWorkOrder: function (\n    repairRequestId,\n    newRepairWorkOrderId\n  ) {\n    return axios.patch(`/api/repair-requests/${repairRequestId}`, {\n      repairWorkOrder: newRepairWorkOrderId,\n    });\n  },\n\n  saveRepairRequest: function (repairRequestData) {\n    return axios.post(\"/api/repair-requests\", repairRequestData);\n  },\n\n  // Repair Work Order methods\n  getRepairWorkOrders: function () {\n    return axios.get(\"/api/repair-work-orders\");\n  },\n\n  saveRepairWorkOrder: function (repairWorkOrderData) {\n    return axios.post(\"/api/repair-work-orders\", repairWorkOrderData);\n  },\n};\n","import React, { useState } from \"react\";\nimport API from \"../utils/API\";\nimport {\n  Button,\n  CssBaseline,\n  TextField,\n  Box,\n  Typography,\n  Container,\n  FormGroup\n} from \"@material-ui/core\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n// import {  } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\n\nimport { Formik, Form, Field } from \"formik\";\nconst to = require(\"to-case\");\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      eTripleR &nbsp;\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Login(props) {\n  const classes = useStyles();\n  const [error, setError] = useState(\"\");\n\n  const handleFormSubmit = (values) => {\n    const user = {\n      username: to.lower(values.username),\n      password: values.password,\n    };\n    API.login(user)\n      .then(function (res) {\n        props.handleLogin(res.data);\n      })\n      .catch(function (err) {\n        setError(\"Credentials are incorrect\");\n      });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <Formik\n          //setting initial value to correct user info fro testing----------------------------------\n          // Maintenance Manager\n          initialValues={{\n            username: \"matthewsouthcott\",\n            password: \"password\",\n          }}\n          // // Operations Manager\n          // initialValues={{\n          //   username: \"maxguo\",\n          //   password: \"password\",\n          // }}\n\n          // // Operator\n          // initialValues={{\n          //   username: \"mathieuleblanc\",\n          //   password: \"password\",\n          // }}\n\n          // // Tech\n          // initialValues={{\n          //   username: \"danieltremblay\",\n          //   password: \"password\",\n          // }}\n\n          // End of test -----------------------------------------------------\n\n          // initialValues={{\n          //   username: \"\",\n          //   password: \"\",\n          // }}\n          onSubmit={handleFormSubmit}\n        >\n          {({ errors, touched, values }) => (\n            <Form className={classes.form}>\n              <FormGroup className={classes.formGroup}>\n                <Field\n                  as={TextField}\n                  name=\"username\"\n                  label=\"Username\"\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  autoComplete=\"username\"\n                  autoFocus\n                />\n              </FormGroup>\n              <FormGroup>\n                <Field\n                  as={TextField}\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                />\n              </FormGroup>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                Sign In\n              </Button>\n            </Form>\n          )}\n        </Formik>\n        <Alert\n          variant=\"outlined\"\n          severity=\"error\"\n          style={{ opacity: error ? 1 : 0 , width:\"100%\"}}\n          onClose={() => setError(\"\")}\n        >\n          {error}\n        </Alert>\n      </div>\n      <Box mt={4}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React from \"react\";\n\nconst UserContext = React.createContext({\n  _id: \"\",\n  role: \"\",\n  rank: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  occupation: \"\",\n  available: false,\n  mounted: false,\n  username: \"\",\n});\n\nexport default UserContext;\n","import React, { useContext, useState } from \"react\";\nimport UserContext from \"../utils/UserContext\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport clsx from \"clsx\";\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Divider,\n  Grid,\n  Button,\n  TextField,\n  Typography,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\n\nimport KeyboardCapslockIcon from \"@material-ui/icons/KeyboardCapslock\";\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\nimport DriveEtaIcon from \"@material-ui/icons/DriveEta\";\nimport API from \"../utils/API\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n  card: {\n    padding: theme.spacing(4),\n  },\n  items: {\n    margin: theme.spacing(2),\n  },\n  details: {\n    display: \"flex\",\n  },\n  button: {\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nProfile.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default function Profile(props) {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n\n  //get the logged user's info passed in\n  const userInfo = useContext(UserContext);\n\n  // get new password for updating\n  const [password, setPassword] = useState({\n    oldPassword: \"\",\n    newPassword: \"\",\n    confirm: \"\",\n  });\n\n  const [error, setError] = useState({\n    message: \"\",\n    severity: \"\",\n  });\n\n  const handlePasswordChange = (event) => {\n    setPassword({\n      ...password,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  //TODO: aoi call to update the password in the database\n  const handleFormSubmit = (event) => {\n    //check if any input is empty\n    if (!(password.oldPassword && password.newPassword && password.confirm)) {\n      setError({ message: \"Inputs shouldn't be blank.\", severity: \"error\" });\n    } else if (password.newPassword !== password.confirm) {\n      setError({\n        message: \"New password entered doesn't match.\",\n        severity: \"error\",\n      });\n    } else {\n      const data = {\n        id: userInfo._id,\n        oldPassword: password.oldPassword,\n        newPassword: password.newPassword,\n      };\n\n      API.updateUserPassword(data).then((res) => {\n        if (res.data) {\n          setError({\n            message: \"Password is changed successfully\",\n            severity: \"success\",\n          });\n          setPassword({\n            oldPassword: \"\",\n            newPassword: \"\",\n            confirm: \"\",\n          })\n        } else {\n          setError({\n            message: \"Password entered is incorrect.\",\n            severity: \"error\",\n          });\n        }\n      });\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={6}>\n        <Grid item xl={8} md={6} sm={12}>\n          {/* edit user profile  */}\n          <Card {...rest} className={clsx(classes.card, className)}>\n            <form autoComplete=\"off\" noValidate>\n              <CardContent>\n                <div className={classes.details}>\n                  <div>\n                    <Typography gutterBottom variant=\"h3\">\n                      {userInfo.firstName} {userInfo.lastName}\n                    </Typography>\n\n                    <Typography className={classes.locationText} variant=\"h5\">\n                      {userInfo.role}\n                    </Typography>\n                  </div>\n                </div>\n              </CardContent>\n              <Divider />\n\n              <List>\n                <ListItem className={classes.items}>\n                  <ListItemAvatar>\n                    <KeyboardCapslockIcon />\n                  </ListItemAvatar>\n                  <ListItemText>\n                    <b>Rank: </b> {userInfo.rank}\n                  </ListItemText>\n                </ListItem>\n                <Divider variant=\"inset\" component=\"li\" />\n\n                <ListItem className={classes.items}>\n                  <ListItemAvatar>\n                    <AccountBoxIcon />\n                  </ListItemAvatar>\n                  <ListItemText>\n                    <b>Occupation: </b> {userInfo.occupation}\n                  </ListItemText>\n                </ListItem>\n                <Divider variant=\"inset\" component=\"li\" />\n                <ListItem className={classes.items}>\n                  <ListItemAvatar>\n                    <DriveEtaIcon />\n                  </ListItemAvatar>\n                  <ListItemText>\n                    <b>Tehicle Information: </b>\n                  </ListItemText>\n                </ListItem>\n                <Divider variant=\"inset\" component=\"li\" />\n              </List>\n            </form>\n          </Card>\n        </Grid>\n\n        <Grid item xl={4} md={6} sm={12}>\n          {/* user basic info  */}\n          <Card {...rest} className={clsx(classes.card, className)}>\n            <form>\n              <CardHeader subheader=\"Update password\" title=\"Password\" />\n              <Divider />\n              <CardContent>\n                <TextField\n                  fullWidth\n                  label=\"Old Password\"\n                  name=\"oldPassword\"\n                  onChange={handlePasswordChange}\n                  value={password.oldPassword}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  fullWidth\n                  label=\"New Password\"\n                  name=\"newPassword\"\n                  onChange={handlePasswordChange}\n                  style={{ marginTop: \"1rem\" }}\n                  type=\"password\"\n                  value={password.newPassword}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  fullWidth\n                  label=\"Confirm password\"\n                  name=\"confirm\"\n                  onChange={handlePasswordChange}\n                  style={{ marginTop: \"1rem\" }}\n                  type=\"password\"\n                  value={password.confirm}\n                  variant=\"outlined\"\n                />\n              </CardContent>\n              <Divider />\n              <CardActions>\n                <Button\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  className={classes.button}\n                  onClick={handleFormSubmit}\n                >\n                  Update\n                </Button>\n              </CardActions>\n\n              <Alert\n                variant=\"outlined\"\n                severity={error.severity}\n                style={{ opacity: error.message ? 1 : 0 }}\n                onClose={() => setError({})}\n              >\n                {error.message}\n              </Alert>\n            </form>\n          </Card>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  FormGroup,\n  MenuItem,\n  TextField,\n  Typography,\n  Container,\n} from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport API from \"../../utils/API\";\nimport * as Yup from \"yup\";\nimport \"./style.css\";\n\nfunction RepairRequestForm(props) {\n  const [currentLocation, setCurrentLocation] = useState();\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((pos) => {\n      setCurrentLocation({\n        latitude: pos.coords.latitude,\n        longitude: pos.coords.longitude,\n      });\n    });\n  }, []);\n\n  const vehicleConditionClasses = [\n    \"Beyond Repair\",\n    \"Close Support\",\n    \"Depot\",\n    \"General Support\",\n    \"Integral\",\n    \"Unknown\",\n  ];\n\n  const vehicleMovementOptions = [\"Drivable\", \"Straight Pull\", \"Suspended Tow\"];\n\n  const tacticalSituationStatuses = [\"Safe\", \"Hostile\"];\n\n  const useStyles = makeStyles({\n    typography: {\n      marginBottom: 15,\n    },\n    formGroup: {\n      marginBottom: 15,\n    },\n    errorMessage: {\n      color: \"red\",\n    },\n  });\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n    setTimeout(() => setOpen(false), 1500);\n  };\n\n  const RepairRequestFormSchema = Yup.object().shape({\n    description: Yup.string()\n      .min(2, \"Minimum 2 letters\")\n      .max(30, \"Maximum 30 letters\")\n      .required(\"Required\"),\n    estimatedConditionClass: Yup.string().required(\"Required\"),\n    vehicleCanBeMovedBy: Yup.string().required(\"Required\"),\n    localTacticalSituation: Yup.string().required(\"Required\"),\n    crewRemainedWithVehicle: Yup.boolean().required(\"Required\"),\n  });\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Card>\n        <CardContent>\n          <Typography variant=\"h4\" className={classes.typography}>\n            Create Repair Request\n          </Typography>\n          {props.user.mounted === false ? (\n            <Typography\n              variant=\"h6\"\n              className={classes.typography}\n              style={{ marginBottom: 0 }}\n            >\n              You're currently dismounted. To create a Repair Request, your\n              Operations Manager must first assign you to a vehicle.\n            </Typography>\n          ) : (\n            <Formik\n              initialValues={{\n                description: \"\",\n                estimatedConditionClass: \"\",\n                vehicleCanBeMovedBy: \"\",\n                localTacticalSituation: \"\",\n                crewRemainedWithVehicle: \"\",\n              }}\n              validationSchema={RepairRequestFormSchema}\n              onSubmit={(values, { resetForm }) => {\n                const repairRequest = {\n                  description: values.description,\n                  estimatedConditionClass: values.estimatedConditionClass,\n                  vehicleCanBeMovedBy: values.vehicleCanBeMovedBy,\n                  localTacticalSituation: values.localTacticalSituation,\n                  crewRemainedWithVehicle: values.crewRemainedWithVehicle,\n                  location: currentLocation,\n                };\n                API.saveRepairRequest(repairRequest)\n                  .then((res) => {\n                    let repairRequestIdArray = [];\n                    if (props.vehicle.repairRequests) {\n                      repairRequestIdArray = props.vehicle.repairRequests.map(\n                        (repairRequest) => repairRequest._id\n                      );\n                    }\n                    API.updateVehicleRepairRequests(props.vehicle._id, [\n                      ...repairRequestIdArray,\n                      res.data._id,\n                    ]);\n                  })\n                  .then(() =>\n                    API.updateVehicleServiceableStatus(props.vehicle._id, false)\n                  );\n\n                // Show alert with form submission feedback\n                handleClick();\n\n                // Reset form\n                resetForm();\n              }}\n            >\n              {({ errors, touched, values }) => (\n                <Form>\n                  <FormGroup className={classes.formGroup}>\n                    <Field\n                      name=\"description\"\n                      as={TextField}\n                      label=\"Description\"\n                    />\n                    {errors.description && touched.description ? (\n                      <span className={classes.errorMessage}>\n                        <ErrorMessage name=\"description\" />\n                      </span>\n                    ) : null}\n                  </FormGroup>\n                  <FormGroup className={classes.formGroup}>\n                    <Field\n                      name=\"estimatedConditionClass\"\n                      as={TextField}\n                      select\n                      label=\"Estimated Condition Class\"\n                    >\n                      {vehicleConditionClasses.map((conditionClass) => (\n                        <MenuItem key={conditionClass} value={conditionClass}>\n                          {conditionClass}\n                        </MenuItem>\n                      ))}\n                    </Field>\n                    {errors.estimatedConditionClass &&\n                    touched.estimatedConditionClass ? (\n                      <span className={classes.errorMessage}>\n                        <ErrorMessage name=\"estimatedConditionClass\" />\n                      </span>\n                    ) : null}\n                  </FormGroup>\n                  <FormGroup className={classes.formGroup}>\n                    <Field\n                      name=\"vehicleCanBeMovedBy\"\n                      as={TextField}\n                      select\n                      label=\"Vehicle Can Be Moved By\"\n                    >\n                      {vehicleMovementOptions.map((option) => (\n                        <MenuItem key={option} value={option}>\n                          {option}\n                        </MenuItem>\n                      ))}\n                    </Field>\n                    {errors.vehicleCanBeMovedBy &&\n                    touched.vehicleCanBeMovedBy ? (\n                      <span className={classes.errorMessage}>\n                        <ErrorMessage name=\"vehicleCanBeMovedBy\" />\n                      </span>\n                    ) : null}\n                  </FormGroup>\n                  <FormGroup className={classes.formGroup}>\n                    <Field\n                      name=\"localTacticalSituation\"\n                      as={TextField}\n                      select\n                      label=\"Local Tactical Situation\"\n                    >\n                      {tacticalSituationStatuses.map((status) => (\n                        <MenuItem key={status} value={status}>\n                          {status}\n                        </MenuItem>\n                      ))}\n                    </Field>\n                    {errors.localTacticalSituation &&\n                    touched.localTacticalSituation ? (\n                      <span className={classes.errorMessage}>\n                        <ErrorMessage name=\"localTacticalSituation\" />\n                      </span>\n                    ) : null}\n                  </FormGroup>\n                  <FormGroup className={classes.formGroup}>\n                    <Field\n                      name=\"crewRemainedWithVehicle\"\n                      as={TextField}\n                      select\n                      label=\"Crew Remained With Vehicle\"\n                    >\n                      <MenuItem key=\"Yes\" value={true}>\n                        Yes\n                      </MenuItem>\n                      <MenuItem key=\"No\" value={false}>\n                        No\n                      </MenuItem>\n                    </Field>\n                    {errors.crewRemainedWithVehicle &&\n                    touched.crewRemainedWithVehicle ? (\n                      <span className={classes.errorMessage}>\n                        <ErrorMessage name=\"crewRemainedWithVehicle\" />\n                      </span>\n                    ) : null}\n                  </FormGroup>\n                  <Button type=\"submit\">Create</Button>\n                  {/* <pre>{JSON.stringify(values, null, 2)}</pre>\n                <pre>{JSON.stringify(errors, null, 2)}</pre> */}\n                </Form>\n              )}\n            </Formik>\n          )}\n        </CardContent>\n      </Card>\n      {open && (\n        <Alert\n          icon={<CheckIcon fontSize=\"inherit\" />}\n          variant=\"filled\"\n          severity=\"success\"\n          hidden={true}\n          style={{ marginTop: 20 }}\n        >\n          Repair Request created\n        </Alert>\n      )}\n    </Container>\n  );\n}\n\nexport default RepairRequestForm;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport CreateRepairRequestForm from \"../components/CreateRepairRequestForm/index\";\nimport API from \"../utils/API\";\nimport UserContext from \"../utils/UserContext\";\n\nfunction CreateRepairRequest() {\n  const [vehicle, setVehicle] = useState([]);\n\n  const currentUser = useContext(UserContext);\n\n  useEffect(() => {\n    API.getVehicles().then((res) => {\n      const targetVehicle = res.data.find(\n        (vehicle) =>\n          vehicle.occupant && vehicle.occupant._id === currentUser._id\n      );\n      setVehicle(targetVehicle);\n    });\n  });\n\n  return <CreateRepairRequestForm user={currentUser} vehicle={vehicle} />;\n}\n\nexport default CreateRepairRequest;\n","import React from \"react\";\nimport { ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport AirportShuttleIcon from \"@material-ui/icons/AirportShuttle\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport PageviewIcon from \"@material-ui/icons/Pageview\";\n// import Link from '@material-ui/core/Link';\nimport { Link } from \"react-router-dom\";\nimport \"./Style.css\";\n\n\n\nexport const opsManagerListItems = (\n  <div>\n    <Link to=\"/create-user\">\n      <ListItem button>\n        <ListItemIcon>\n          <PeopleIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Create Operator\" />\n      </ListItem>\n    </Link>\n    <Link to=\"/create-vehicle\">\n      <ListItem button>\n        <ListItemIcon>\n          <AirportShuttleIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Create Operator Vehicle\" />\n      </ListItem>\n    </Link>\n    <Link to=\"/display-users\">\n      <ListItem button>\n        <ListItemIcon>\n          <PageviewIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Display Operators\" />\n      </ListItem>\n    </Link>\n    <Link to=\"/display-vehicles\">\n      <ListItem button>\n        <ListItemIcon>\n          <PageviewIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Display Operator Vehicles\" />\n      </ListItem>\n    </Link>\n  </div>\n);\n\nexport const maintenanceManagerListItems = (\n  <div>\n    <Link to=\"/create-user\">\n      <ListItem button>\n        <ListItemIcon>\n          <PeopleIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Create Technician\" />\n      </ListItem>\n    </Link>\n    <Link to=\"/create-vehicle\">\n      <ListItem button>\n        <ListItemIcon>\n          <AirportShuttleIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Create Technician Vehicle\" />\n      </ListItem>\n    </Link>\n    <Link to=\"/display-users\">\n      <ListItem button>\n        <ListItemIcon>\n          <PageviewIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Display Technicians\" />\n      </ListItem>\n    </Link>\n    <Link to=\"/display-vehicles\">\n      <ListItem button>\n        <ListItemIcon>\n          <PageviewIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Display Technician Vehicles\" />\n      </ListItem>\n    </Link>\n    <Link to=\"/display-repairRequests\">\n      <ListItem button>\n        <ListItemIcon>\n          <PageviewIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Display Repair Requests\" />\n      </ListItem>\n    </Link>\n    <Link to=\"/display-repairWorkorders\">\n      <ListItem button>\n        <ListItemIcon>\n          <PageviewIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Display Repair Work Orders\" />\n      </ListItem>\n    </Link>\n    <Link to=\"/dashboard\">\n      <ListItem button>\n        <ListItemIcon>\n          <DashboardIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Display Dashboard\" />\n      </ListItem>\n    </Link>\n  </div>\n);\n\nexport const operatorListItems = (\n  <div>\n    <Link to=\"/create-repair-request\">\n      <ListItem button>\n        <ListItemIcon>\n          <AssignmentIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Create Repair Request\" />\n      </ListItem>\n    </Link>\n    <Link to=\"/display-repairRequests\">\n      <ListItem button>\n        <ListItemIcon>\n          <PageviewIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Display Repair Requests\" />\n      </ListItem>\n    </Link>\n  </div>\n);\n\nexport const technicianListItems = (\n  <div>\n    <Link to=\"/display-repairRequests\">\n      <ListItem button>\n        <ListItemIcon>\n          <PageviewIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Display Repair Requests\" />\n      </ListItem>\n    </Link>\n    <Link to=\"/display-repairWorkorders\">\n      <ListItem button>\n        <ListItemIcon>\n          <PageviewIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Display Repair Work Orders\" />\n      </ListItem>\n    </Link>\n  </div>\n);","import React, { useContext } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  CssBaseline,\n  Drawer,\n  AppBar,\n  Toolbar,\n  List,\n  Typography,\n  Divider,\n  IconButton,\n  Container,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport { opsManagerListItems, maintenanceManagerListItems, operatorListItems, technicianListItems } from \"../listItems\";\nimport UserContext from \"../../utils/UserContext\";\n\nimport InputIcon from \"@material-ui/icons/Input\";\nimport API from \"../../utils/API\";\n\nexport default function Navigation(props) {\n  const drawerWidth = 300;\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: \"flex\",\n    },\n    toolbar: {\n      paddingRight: 24,\n    },\n    toolbarIcon: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      padding: \"0 8px\",\n      ...theme.mixins.toolbar,\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create([\"width\", \"margin\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create([\"width\", \"margin\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n    },\n    menuButtonHidden: {\n      display: \"none\",\n    },\n    title: {\n      flexGrow: 1,\n    },\n    drawerPaper: {\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      width: drawerWidth,\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerPaperClose: {\n      overflowX: \"hidden\",\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      width: theme.spacing(7),\n      [theme.breakpoints.up(\"sm\")]: {\n        width: theme.spacing(9),\n      },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      height: \"100vh\",\n      overflow: \"auto\",\n    },\n    container: {\n      paddingTop: theme.spacing(4),\n      paddingBottom: theme.spacing(4),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      display: \"flex\",\n      overflow: \"auto\",\n      flexDirection: \"column\",\n    },\n    fixedHeight: {\n      height: 240,\n    },\n  }));\n\n  // export default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleLogout = () => {\n    API.logout().then(() => (window.location.href = \"/\"));\n  };\n\n  const personalProfile = () =>{\n    window.location.href = \"/profile\"\n  }\n\n  const { role } = useContext(UserContext);\n  let menuListItems = opsManagerListItems;\n  switch(role) {\n    case 'Technician':\n      menuListItems = technicianListItems\n      break;\n    case 'Operator':\n      menuListItems = operatorListItems\n      break;\n    case 'Operations Manager':\n      menuListItems = opsManagerListItems\n      break;\n    case 'Maintenance Manager':\n      menuListItems = maintenanceManagerListItems\n      break;\n  }\n\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            eTripleR\n          </Typography>\n\n          <IconButton color=\"inherit\" onClick={personalProfile}>\n              <AccountCircleIcon />\n          </IconButton>\n\n          <IconButton\n            className={classes.signOutButton}\n            color=\"inherit\"\n            onClick={handleLogout}>\n            <InputIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{menuListItems}</List>\n      </Drawer>\n\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          {props.children}\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport {Avatar, CssBaseline, Box, Typography, Container} from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Unauthorized() {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n            You are not allowed to see this page! \n        </Typography>\n        <form className={classes.form} noValidate>\n        </form>\n      </div>\n      <Box mt={8}>\n      </Box>\n    </Container>\n  );\n}","import React, { useContext } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport UserContext from \"../../utils/UserContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n}));\n\nexport default function WelcomeAlbum() {\n  const classes = useStyles();\n\n  const currentUser = useContext(UserContext);\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <div className={classes.heroContent}>\n        <Container maxWidth=\"lg\">\n          <Typography\n            component=\"h1\"\n            variant=\"h2\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom\n          >\n            Welcome to eTripleR\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h4\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom\n          >\n            Your tactical maintenance management solution\n          </Typography>\n          <Typography\n            variant=\"h5\"\n            align=\"center\"\n            color=\"textSecondary\"\n            paragraph\n          >\n            You're currently logged in as {currentUser.rank}{\" \"}\n            {currentUser.firstName} {currentUser.lastName} with role{\" \"}\n            {currentUser.role}.\n          </Typography>\n        </Container>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React, { useEffect, useState } from 'react';\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer} from 'recharts';\nimport Title from '../Title';\nimport API from \"../../utils/API\";\n\nexport default function BarCharts() {\n\n  const [chartData, setChartData] = useState([]);\n\n  useEffect(() => {\n    API.getRepairRequests()\n      .then(res => {\n        let dataArray = [{name: 'unAssigned', requests: 0}]\n        let techNameArray = ['unAssigned']\n        let techName = ''\n        res.data.forEach(element => {\n          if (element.assignedTo){\n            techName = `${element.assignedTo.firstName} ${element.assignedTo.lastName}` \n          }\n          else techName = 'unAssigned'\n\n          if (!techNameArray.includes(techName))\n          {\n            dataArray.push({name: techName, requests: 1})\n            techNameArray.push(techName)\n          }\n          else\n          {\n            dataArray = dataArray.map(ele => {\n              if (ele.name === techName)\n              {\n                ele.requests +=1\n              }\n              return ele\n            })\n          }\n        });\n\n        setChartData(dataArray)\n      })\n  }, [])\n\n\n  return (\n    <React.Fragment>\n    <Title>Requests by Technician</Title>\n    <ResponsiveContainer>\n    <BarChart\n      width={250}\n      height={200}\n      data={chartData}>\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"name\" />\n      <YAxis />\n      <Tooltip />\n      <Legend />\n      <Bar dataKey=\"requests\" fill={'blue'}/>\n    </BarChart>\n    </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer} from 'recharts';\nimport Title from '../Title';\nimport API from \"../../utils/API\";\n\nexport default function BarCharts() {\n\n  const [chartData, setChartData] = useState([]);\n\n  useEffect(() => {\n    API.getRepairRequests()\n      .then(res => {\n        let dataArray = [{Name: 'Local Tactical Situation', Hostile : 0, Safe : 0}]\n        res.data.forEach(element => {\n          if (element.localTacticalSituation === 'Hostile') dataArray[0].Hostile +=1\n          else dataArray[0].Safe +=1\n        });\n        setChartData(dataArray)\n      })\n  }, [])\n\n\n  return (\n    <React.Fragment>\n    <Title>Requests by Local Tactical Situation</Title>\n    <ResponsiveContainer>\n    <BarChart\n      width={250}\n      height={200}\n      data={chartData}>\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"name\" />\n      <YAxis />\n      <Tooltip />\n      <Legend />\n      <Bar dataKey=\"Hostile\" fill={'red'}/>\n      <Bar dataKey=\"Safe\" fill={'green'}/>\n    </BarChart>\n    </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport {PieChart, Pie, Cell,ResponsiveContainer } from 'recharts';\nimport API from \"../../utils/API\";\nimport Title from '../Title';\n\n\nconst COLORS = ['red', 'khaki', 'green'];\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({\ncx, cy, midAngle, innerRadius, outerRadius, percent,}) => {\n   const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text x={x} y={y} fill=\"black\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\n\nexport default function PieCharts() {\n\n  const [chartData, setChartData] = useState([])\n\n  useEffect(() => {\n    API.getRepairRequests()\n      .then(res => {\n\n        let openOrderNum = 0\n        let progressOrderNum = 0\n        let finishedOrderNum = 0\n      \n        res.data.forEach(element => {\n          if (element.status === 'Open') openOrderNum +=1\n          else if (element.status === 'Work In Progress') progressOrderNum +=1\n          else finishedOrderNum +=1\n        });\n\n        const data = [\n          { name: 'Open', value: openOrderNum },\n          { name: 'Progress', value: progressOrderNum },\n          { name: 'Done', value: finishedOrderNum },\n        ];\n\n\n        setChartData(data)\n      })\n  }, [])\n\n\n  return (\n    <React.Fragment>\n    <Title>Requests By Status</Title>\n    <ResponsiveContainer>\n    <PieChart width={200} height={200}>\n      <Pie\n        data={chartData}\n        labelLine={false}\n        label={renderCustomizedLabel}\n        outerRadius={80}\n        fill=\"#8884d8\"\n        dataKey=\"value\">\n        {\n          chartData.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n        }\n      </Pie>\n    </PieChart>\n    </ResponsiveContainer>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { loadModules } from 'esri-loader';\nimport API from '../../utils/API'\n\n\nexport const WebMapView = () => {\n    const mapRef = useRef();\n\n    const [mapSymbols, setMapSymbols] = useState([])\n\n    useEffect(() => {\n      API.getVehicles()\n        .then(res => {\n          setMapSymbols(res.data)\n        })\n    }, [])\n\n    useEffect(\n      () => {\n        // lazy load the required ArcGIS API for JavaScript modules and CSS\n        loadModules(['esri/Map', \n                    'esri/views/MapView', \n                    'esri/Graphic', \n                    'esri/layers/GraphicsLayer',\n                    'esri/widgets/BasemapToggle', \n                    'esri/widgets/CoordinateConversion',\n                    'esri/widgets/Legend'], { css: true })\n        .then(([ArcGISMap, MapView, Graphic, GraphicsLayer, BasemapToggle,CoordinateConversion,Legend]) => {\n          const map = new ArcGISMap({\n            basemap: 'hybrid'\n          });\n\n          // load the map view at the ref's DOM node\n          const view = new MapView({\n            container: mapRef.current,\n            map: map,\n            center: [-75.54, 45.45],\n            zoom: 11\n          });\n\n          let pointGraphics = []\n            \n            mapSymbols.forEach(symbolObj => {\n\n            if (symbolObj.role === \"Maintenance Manager\" && symbolObj.location !== undefined)\n            {\n\n              let registrationNumber = symbolObj.registrationNumber\n              let callSign = symbolObj.callSign\n              let userName = `${symbolObj.occupant.firstName} ${symbolObj.occupant.lastName}`\n              let rank = symbolObj.occupant.rank\n              let vehicleType = symbolObj.type\n\n              let point = {\n                type: \"point\", // autocasts as new Point()\n                longitude: symbolObj.location.longitude,\n                latitude: symbolObj.location.latitude\n              };\n\n              let symbol = {\n                type: \"simple-marker\",  // autocasts as new PictureMarkerSymbol()\n                color: 'orange',\n                size: \"15px\",\n                style: 'square'\n              }\n\n              let graphic = new Graphic({\n                geometry: point,\n                symbol: symbol});\n\n              graphic.popupTemplate = {\n                title : \"Maintenance Manager Location\",\n                content:`<ul><li>Vehicle Registration Number: ${registrationNumber}</li>` +\n                        `<li>Vehicle CallSign: ${callSign}</li>` +\n                        `<li>Manager Name: ${userName}</li>` +\n                        `<li>Manager Rank: ${rank}</li>` +\n                        `<li>Vehicle Type: ${vehicleType}</li><ul>`}\n                      \n              pointGraphics.push(graphic)    \n            }\n\n\n\n            if (symbolObj.repairRequests!== 0){\n              let callSign = symbolObj.callSign\n              let registrationNumber = symbolObj.registrationNumber\n              let userName = ''\n              let occupation = ''\n              let rank = ''\n\n              if (symbolObj.occupant)\n              {\n                userName = `${symbolObj.occupant.firstName} ${symbolObj.occupant.lastName}`\n                occupation = symbolObj.occupant.occupation\n                rank = symbolObj.occupant.rank\n              }\n\n              symbolObj.repairRequests.forEach(element =>{\n                \n                let point = {\n                  type: \"point\", // autocasts as new Point()\n                  longitude: element.location.longitude,\n                  latitude: element.location.latitude\n                };\n                \n\n                let color = 'green'\n                if (element.status === 'Work In Progress') color = 'yellow'\n                else if (element.status === 'Open') color = 'red'\n\n\n                let symbol = {\n                  type: \"simple-marker\",  // autocasts as new PictureMarkerSymbol()\n                  color: color,\n                  size: \"15px\"\n                }\n                \n                element.localTacticalSituation === 'Safe' ? symbol.style = 'circle' : symbol.style = 'triangle'\n\n                let graphic = new Graphic({\n                  geometry: point,\n                  symbol: symbol});\n\n                \n\n                graphic.popupTemplate = {\n                title : \"Repair Request Details\",\n                content:`<ul><li>Vehicle Registration Number: ${registrationNumber}</li>` +\n                        `<li>Vehicle CallSign: ${callSign}</li>` +\n                        `<li>Operator Name: ${userName}</li>` +\n                        `<li>Operator Occupation: ${occupation}</li>` +\n                        `<li>Operator Rank: ${rank}</li>` +\n                        `<li>Estimated Condition Class: ${element.estimatedConditionClass}</li>` +\n                        `<li>Can Be Moved By: ${element.vehicleCanBeMovedBy}</li>` +\n                        `<li>Local Tactical Situation: ${element.localTacticalSituation}</li>` +\n                        `<li>Crew Remained With Vehicle: ${element.crewRemainedWithVehicle}</li><ul>`}\n    \n                pointGraphics.push(graphic)\n              })\n            }\n            \n          });\n\n          let graphicLayer = new GraphicsLayer({\n            graphics: pointGraphics\n          });\n          map.add(graphicLayer)\n\n          let toggle = new BasemapToggle({\n            // 2 - Set properties\n            view: view, // view that provides access to the map's 'hybrid' basemap\n            nextBasemap: \"topo-vector\" // allows for toggling to the 'topo' basemap\n          });\n\n          view.ui.add(toggle, \"top-left\");\n\n          let ccWidget = new CoordinateConversion({\n            view: view\n          });\n\n          view.ui.add(ccWidget, \"bottom-left\");\n\n          return () => {\n            if (view) {\n              // destroy the map view\n              view.container = null;\n            }\n          };\n        });\n      }\n    );\n\n    return <div className=\"webmap\" ref={mapRef} style={{height:\"100%\", width:\"100%\"}}/>;\n\n};","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  table: {\n    width: 250,\n  },\n});\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData('Request Open', <div style={{height: \"25px\", width: \"50px\",backgroundColor: \"red\"}}/>),\n  createData('Request In Progress', <div style={{height: \"25px\", width: \"50px\",backgroundColor: \"khaki\"}}/>),\n  createData('Request Finished', <div style={{height: \"25px\", width: \"50px\",backgroundColor: \"green\"}}/>),\n  createData('Manager Location', <div style={{height: \"25px\", width: \"25px\", backgroundColor: \"orange\"}}/>),\n  createData('Situation: Safe', <div style={{height: \"25px\", width: \"25px\", backgroundColor: \"#555\", borderRadius: \"50px\"}}/>),\n  createData('Situation: Hostile', <div style={{height: \"0\", width: \"0\", borderLeft: '13px solid transparent', borderRight: '13px solid transparent', borderBottom: '26px solid #555'}}/>)\n];\n\nexport default function LegendTable() {\n  const classes = useStyles();\n\n  return (\n    <TableContainer>\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n        <TableHead>\n          <TableRow>\n            <TableCell style={{fontWeight: 800}}>Requests Status</TableCell>\n            <TableCell align=\"right\" style={{fontWeight: 800}}>Color</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.calories}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Grid, Paper} from '@material-ui/core';\nimport BarChartsRequestByTechnician from '../BarChartsRequestByTechnician';\nimport BarChartsTacticalSituation from '../BarChartsTacticalSituation'\nimport PieCharts from '../PieCharts';\nimport {WebMapView} from '../WebMapView'\nimport LegendTable from '../LegendTable'\n\nconst useStyles = makeStyles((theme) => ({\n  \n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 250,\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  \n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <Grid container spacing={3}>\n      {/* Line Chart */}\n      <Grid item xs={12} md={4} lg={3}>\n        <Paper className={fixedHeightPaper}>\n          <BarChartsTacticalSituation />\n        </Paper>\n      </Grid>\n      {/* Bar Charts */}\n      <Grid item xs={12} md={5} lg={6}>\n        <Paper className={fixedHeightPaper}>\n          <BarChartsRequestByTechnician/>\n        </Paper>\n      </Grid>\n      {/* Bar Charts */}\n      <Grid item xs={12} md={3} lg={3}>\n        <Paper className={fixedHeightPaper}>\n          <PieCharts/>\n        </Paper>\n      </Grid>\n      {/* Maps */}\n      <Grid item xs={12} md={4} lg={3}>\n        <Paper style={{height: \"500px\"}}>\n        <LegendTable/>\n        </Paper>\n      </Grid>\n      <Grid item xs={12} md={8} lg={9} style={{height: \"500px\"}}>\n        <WebMapView/>\n      </Grid>\n    </Grid>\n  );\n}\n\n\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  FormGroup,\n  MenuItem,\n  TextField,\n  Typography,\n  Container,\n} from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport API from \"../../utils/API\";\nimport \"./style.css\";\nvar to = require(\"to-case\");\n\nfunction UserForm(props) {\n  const useStyles = makeStyles({\n    typography: {\n      marginBottom: 15,\n    },\n    formGroup: {\n      marginBottom: 15,\n    },\n    errorMessage: {\n      color: \"red\",\n    },\n  });\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n    setTimeout(() => setOpen(false), 1500);\n  };\n\n  const UserFormSchema = Yup.object().shape({\n    rank: Yup.string().required(\"Required\"),\n    firstName: Yup.string()\n      .matches(\n        \"^[a-zA-Z][a-zA-Z-. ]*$\",\n        \"Must begin with a letter, and can only contain letters and spaces, - and .\"\n      )\n      .min(2, \"Minimum 2 letters\")\n      .max(30, \"Maximum 30 letters\")\n      .required(\"Required\"),\n    lastName: Yup.string()\n      .matches(\n        \"^[a-zA-Z][a-zA-Z-. ]*$\",\n        \"Must begin with a letter, and can only contain letters and spaces, - and .\"\n      )\n      .min(2, \"Minimum 2 letters\")\n      .max(30, \"Maximum 30 letters\")\n      .required(\"Required\"),\n    occupation: Yup.string().required(\"Required\"),\n    username: Yup.string()\n      .matches(\n        \"^[a-zA-Z][a-zA-Z0-9]*$\",\n        \"Must begin with a letter, and can only contain letters and numbers\"\n      )\n      .min(6, \"Minimum 6 characters\")\n      .max(20, \"Maximum 20 characters\")\n      .required(\"Required\"),\n    password: Yup.string()\n      .matches(\n        \"^[a-zA-Z0-9!@#%$&]*$\",\n        \"Can only contain letters, numbers, !, @, #, $, % and &\"\n      )\n      .min(8, \"Minimum 8 characters\")\n      .max(20, \"Maximum 20 characters\")\n      .required(\"Required\"),\n  });\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Card>\n        <CardContent>\n          <Typography variant=\"h4\" className={classes.typography}>\n            {props.formTitle}\n          </Typography>\n          <Formik\n            initialValues={{\n              role: props.role,\n              rank: \"\",\n              firstName: \"\",\n              lastName: \"\",\n              occupation: \"\",\n              username: \"\",\n              password: \"\",\n            }}\n            validationSchema={UserFormSchema}\n            onSubmit={(values, { resetForm }) => {\n              const user = {\n                role: props.role,\n                rank: values.rank,\n                firstName: to.title(values.firstName).trim(),\n                lastName: to.title(values.lastName).trim(),\n                occupation: values.occupation,\n                username: to.lower(values.username),\n                password: values.password,\n              };\n              API.saveUser(user);\n\n              // Show alert with form submission feedback\n              handleClick();\n\n              // Reset form\n              resetForm();\n            }}\n          >\n            {({ errors, touched, values }) => (\n              <Form>\n                <FormGroup className={classes.formGroup}>\n                  <Field name=\"rank\" as={TextField} select label=\"Rank\">\n                    {props.ranks.map((rank) => (\n                      <MenuItem key={rank} value={rank}>\n                        {rank}\n                      </MenuItem>\n                    ))}\n                  </Field>\n                  {errors.rank && touched.rank ? (\n                    <span className={classes.errorMessage}>\n                      <ErrorMessage name=\"rank\" />\n                    </span>\n                  ) : null}\n                </FormGroup>\n                <FormGroup className={classes.formGroup}>\n                  <Field name=\"firstName\" as={TextField} label=\"First Name\" />\n                  {errors.firstName && touched.firstName ? (\n                    <span className={classes.errorMessage}>\n                      <ErrorMessage name=\"firstName\" />\n                    </span>\n                  ) : null}\n                </FormGroup>\n                <FormGroup className={classes.formGroup}>\n                  <Field name=\"lastName\" as={TextField} label=\"Last Name\" />\n                  {errors.lastName && touched.lastName ? (\n                    <span className={classes.errorMessage}>\n                      <ErrorMessage name=\"lastName\" />\n                    </span>\n                  ) : null}\n                </FormGroup>\n                <FormGroup className={classes.formGroup}>\n                  <Field\n                    name=\"occupation\"\n                    as={TextField}\n                    select\n                    label=\"Occupation\"\n                  >\n                    {props.occupations.map((occupation) => (\n                      <MenuItem key={occupation} value={occupation}>\n                        {occupation}\n                      </MenuItem>\n                    ))}\n                  </Field>\n                  {errors.occupation && touched.occupation ? (\n                    <span className={classes.errorMessage}>\n                      <ErrorMessage name=\"occupation\" />\n                    </span>\n                  ) : null}\n                </FormGroup>\n                <FormGroup className={classes.formGroup}>\n                  <Field name=\"username\" as={TextField} label=\"Username\" />\n                  {errors.username && touched.username ? (\n                    <span className={classes.errorMessage}>\n                      <ErrorMessage name=\"username\" />\n                    </span>\n                  ) : null}\n                </FormGroup>\n                <FormGroup className={classes.formGroup}>\n                  <Field name=\"password\" as={TextField} label=\"Password\" />\n                  {errors.password && touched.password ? (\n                    <span className={classes.errorMessage}>\n                      <ErrorMessage name=\"password\" />\n                    </span>\n                  ) : null}\n                </FormGroup>\n                <Button type=\"submit\">Create</Button>\n                {/* <pre>{JSON.stringify(values, null, 2)}</pre>\n                <pre>{JSON.stringify(errors, null, 2)}</pre> */}\n              </Form>\n            )}\n          </Formik>\n        </CardContent>\n      </Card>\n      {open && (\n        <Alert\n          icon={<CheckIcon fontSize=\"inherit\" />}\n          variant=\"filled\"\n          severity=\"success\"\n          hidden={true}\n          style={{ marginTop: 20 }}\n        >\n          {props.role} created\n        </Alert>\n      )}\n    </Container>\n  );\n}\n\nexport default UserForm;\n","import React, { useContext } from \"react\";\nimport CreateUserForm from \"../components/CreateUserForm/index\";\nimport operatorRanks from \"../utils/operatorRanks\";\nimport technicianRanks from \"../utils/technicianRanks\";\nimport operatorOccupations from \"../utils/operatorOccupations\";\nimport technicianOccupations from \"../utils/technicianOccupations\";\nimport UserContext from \"../utils/UserContext\";\n\nlet formTitle, role, ranks, occupations;\n\nconst getProps = function (currentRole) {\n  switch (currentRole) {\n    case \"Operations Manager\":\n      formTitle = \"Create Operator\";\n      role = \"Operator\";\n      ranks = operatorRanks;\n      occupations = operatorOccupations;\n      break;\n    default:\n      formTitle = \"Create Technician\";\n      role = \"Technician\";\n      ranks = technicianRanks;\n      occupations = technicianOccupations;\n  }\n};\n\nfunction CreateUser() {\n  const currentUser = useContext(UserContext);\n\n  getProps(currentUser.role);\n\n  return (\n    <CreateUserForm\n      formTitle={formTitle}\n      role={role}\n      ranks={ranks}\n      occupations={occupations}\n    />\n  );\n}\n\nexport default CreateUser;\n","const operatorRanks = [\n  'Private',\n  'Corporal',\n  'Master Corporal',\n  'Sergeant'\n]\n\nexport default operatorRanks","const technicianRanks = [\n  'Craftsman',\n  'Corporal',\n  'Master Corporal',\n  'Sergeant'\n]\n\nexport default technicianRanks","const operatorOccupations = [\n  'Armoured Soldier',\n  'Combat Engineer',\n  'Gunner',\n  'Infantry Soldier',\n  'Military Policy Officer',\n  'Mobile Support Equipment Operator',\n  'Supply Technician'\n]\n\nexport default operatorOccupations","const technicianOccupations = [\n  'Electronic-Optronic Technician',\n  'Materials Technician',\n  'Vehicle Technician',\n  'Weapons Technician'\n]\n\nexport default technicianOccupations","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  FormGroup,\n  MenuItem,\n  TextField,\n  Typography,\n  Container,\n} from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport API from \"../../utils/API\";\nimport \"./style.css\";\nvar to = require(\"to-case\");\n\nfunction VehicleForm(props) {\n  const useStyles = makeStyles({\n    typography: {\n      marginBottom: 15,\n    },\n    formGroup: {\n      marginBottom: 15,\n    },\n    errorMessage: {\n      color: \"red\",\n    },\n  });\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n    setTimeout(() => setOpen(false), 1500);\n  };\n\n  const VehicleFormSchema = Yup.object().shape({\n    type: Yup.string().required(\"Required\"),\n    registrationNumber: Yup.string()\n      .matches(\"^[0-9]*$\", \"Can only contain numbers\")\n      .min(5, \"Must be 5 characters\")\n      .max(5, \"Must be 5 characters\")\n      .required(\"Required\"),\n    callSign: Yup.string()\n      .matches(\"^[a-zA-Z0-9]*$\", \"Can only contain letters and numbers\")\n      .min(1, \"Minimum 1 character\")\n      .max(4, \"Maximum 4 characters\")\n      .required(\"Required\"),\n  });\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Card>\n        <CardContent>\n          <Typography variant=\"h4\" className={classes.typography}>\n            {props.formTitle}\n          </Typography>\n          <Formik\n            initialValues={{\n              role: props.role,\n              type: \"\",\n              registrationNumber: \"\",\n              callSign: \"\",\n            }}\n            validationSchema={VehicleFormSchema}\n            onSubmit={(values, { resetForm }) => {\n              const selectedVehicle = props.vehicles.find((vehicle) => {\n                return vehicle.type === values.type;\n              });\n              const vehicle = {\n                role: values.role,\n                type: values.type,\n                registrationNumber: values.registrationNumber,\n                callSign: to.upper(values.callSign),\n                iconSrc: selectedVehicle.icon,\n              };\n              API.saveVehicle(vehicle);\n\n              // Show alert with form submission feedback\n              handleClick();\n\n              // Reset form\n              resetForm();\n            }}\n          >\n            {({ errors, touched, values }) => (\n              <Form>\n                <FormGroup className={classes.formGroup}>\n                  <Field name=\"type\" as={TextField} select label=\"Type\">\n                    {props.vehicles.map((vehicle) => (\n                      <MenuItem key={vehicle.type} value={vehicle.type}>\n                        {vehicle.type}\n                      </MenuItem>\n                    ))}\n                  </Field>\n                  {errors.type && touched.type ? (\n                    <span className={classes.errorMessage}>\n                      <ErrorMessage name=\"type\" />\n                    </span>\n                  ) : null}\n                </FormGroup>\n                <FormGroup className={classes.formGroup}>\n                  <Field\n                    name=\"registrationNumber\"\n                    as={TextField}\n                    label=\"Registration Number\"\n                  />\n                  {errors.registrationNumber && touched.registrationNumber ? (\n                    <span className={classes.errorMessage}>\n                      <ErrorMessage name=\"registrationNumber\" />\n                    </span>\n                  ) : null}\n                </FormGroup>\n                <FormGroup className={classes.formGroup}>\n                  <Field name=\"callSign\" as={TextField} label=\"Call Sign\" />\n                  {errors.callSign && touched.callSign ? (\n                    <span className={classes.errorMessage}>\n                      <ErrorMessage name=\"callSign\" />\n                    </span>\n                  ) : null}\n                </FormGroup>\n                <Button type=\"submit\">Create</Button>\n                {/* <pre>{JSON.stringify(values, null, 2)}</pre>\n                <pre>{JSON.stringify(errors, null, 2)}</pre> */}\n              </Form>\n            )}\n          </Formik>\n        </CardContent>\n      </Card>\n      {open && (\n        <Alert\n          icon={<CheckIcon fontSize=\"inherit\" />}\n          variant=\"filled\"\n          severity=\"success\"\n          hidden={true}\n          style={{ marginTop: 20 }}\n        >\n          {props.role} vehicle created\n        </Alert>\n      )}\n    </Container>\n  );\n}\n\nexport default VehicleForm;\n","import React, { useContext } from \"react\";\nimport CreateVehicleForm from \"../components/CreateVehicleForm/index\";\nimport operatorVehicles from \"../utils/operatorVehicles\";\nimport technicianVehicles from \"../utils/technicianVehicles\";\nimport UserContext from \"../utils/UserContext\";\n\nlet formTitle, role, vehicles;\n\nconst getProps = function (currentRole) {\n  switch (currentRole) {\n    case \"Operations Manager\":\n      formTitle = \"Create Operator Vehicle\";\n      role = \"Operator\";\n      vehicles = operatorVehicles;\n      break;\n    default:\n      formTitle = \"Create Technician Vehicle\";\n      role = \"Technician\";\n      vehicles = technicianVehicles;\n  }\n};\n\nfunction CreateVehicle() {\n  const currentUser = useContext(UserContext);\n\n  getProps(currentUser.role);\n\n  return (\n    <CreateVehicleForm formTitle={formTitle} role={role} vehicles={vehicles} />\n  );\n}\n\nexport default CreateVehicle;\n","const operatorVehicles = [\n  {\n    type: 'Armoured Engineering Vehicle',\n    icon: 'assets/images/vehicleIcons/armoured-engineering-vehicle.png'\n  },\n  {\n    type: 'Armoured Patrol Vehicle',\n    icon: 'assets/images/vehicleIcons/armoured-patrol-vehicle.png'\n  },\n  {\n    type: 'Heavy Logistic Vehicle, Refueller',\n    icon: 'assets/images/vehicleIcons/heavy-logistic-vehicle-refueller.png'\n  },\n  {\n    type: 'Heavy Logistic Vehicle, Tank Transporter',\n    icon: 'assets/images/vehicleIcons/heavy-logistic-vehicle-tank-transporter.png'\n  },\n  {\n    type: 'Infantry Fighting Vehicle',\n    icon: 'assets/images/vehicleIcons/infantry-fighting-vehicle.png'\n  },\n  {\n    type: 'Main Battle Tank',\n    icon: 'assets/images/vehicleIcons/main-battle-tank.png'\n  },\n  {\n    type: 'Medium Logistic Vehicle, Cargo',\n    icon: 'assets/images/vehicleIcons/medium-logistic-vehicle-cargo.png'\n  },\n  {\n    type: 'Medium Logistic Vehicle, Gun Tractor',\n    icon: 'assets/images/vehicleIcons/medium-logistic-vehicle-gun-tractor.png'\n  }\n]\n\nexport default operatorVehicles","const technicianVehicles = [\n  {\n    type: 'Armoured Recovery Vehicle',\n    icon: 'assets/images/vehicleIcons/armoured-recovery-vehicle.png'\n  },\n  {\n    type: 'Medium Logistic Vehicle, Mobile Repair Team',\n    icon: 'assets/images/vehicleIcons/medium-logistic-vehicle-mobile-repair-team.png'\n  },\n]\n\nexport default technicianVehicles","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Container,\n  Typography,\n  Card,\n  CardContent,\n  Chip,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  typography: {\n    marginBottom: 15,\n  },\n});\n\nfunction getRankIconSrc(user) {\n  switch (user.rank) {\n    case \"Private\":\n      return \"assets/images/rankIcons/army-private.png\";\n    case \"Craftsman\":\n      return \"assets/images/rankIcons/army-craftsman.png\";\n    case \"Corporal\":\n      return \"assets/images/rankIcons/army-corporal.png\";\n    case \"Master Corporal\":\n      return \"assets/images/rankIcons/army-master-corporal.png\";\n    case \"Sergeant\":\n      return \"assets/images/rankIcons/army-sergeant.png\";\n    case \"Warrant Officer\":\n      return \"assets/images/rankIcons/army-warrant-officer.png\";\n    case \"Master Warrant Officer\":\n      return \"assets/images/rankIcons/army-master-warrant-officer.png\";\n    case \"2nd Lieutenant\":\n      return \"assets/images/rankIcons/army-2nd-lieutenant.png\";\n    case \"Lieutenant\":\n      return \"assets/images/rankIcons/army-lieutenant.png\";\n    case \"Captain\":\n      return \"assets/images/rankIcons/army-captain.png\";\n    case \"Major\":\n      return \"assets/images/rankIcons/army-major.png\";\n  }\n}\n\nfunction UserTable(props) {\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Card>\n        <CardContent>\n          <Typography variant=\"h4\" className={classes.typography}>\n            {props.pageTitle}\n          </Typography>\n          <TableContainer>\n            <Table className={classes.table} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Icon</TableCell>\n                  <TableCell align=\"right\">Rank</TableCell>\n                  <TableCell align=\"right\">First Name</TableCell>\n                  <TableCell align=\"right\">Last Name</TableCell>\n                  <TableCell align=\"right\">Occupation</TableCell>\n                  <TableCell align=\"right\">Available</TableCell>\n                  <TableCell align=\"right\">Mounted</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {props.users.map((user) => (\n                  <TableRow key={user._id}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      <img\n                        src={getRankIconSrc(user)}\n                        alt={user.rank}\n                        height=\"100\"\n                      ></img>\n                    </TableCell>\n                    <TableCell align=\"right\">{user.rank}</TableCell>\n                    <TableCell align=\"right\">{user.firstName}</TableCell>\n                    <TableCell align=\"right\">{user.lastName}</TableCell>\n                    <TableCell align=\"right\">{user.occupation}</TableCell>\n                    <TableCell align=\"right\">\n                      {user.available ? (\n                        <Chip\n                          label=\"Yes\"\n                          style={{ color: \"white\", backgroundColor: \"green\" }}\n                        />\n                      ) : (\n                        <Chip\n                          label=\"No\"\n                          style={{ color: \"white\", backgroundColor: \"red\" }}\n                        />\n                      )}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      {user.mounted ? (\n                        <Chip\n                          label=\"Yes\"\n                          style={{ color: \"white\", backgroundColor: \"green\" }}\n                        />\n                      ) : (\n                        <Chip\n                          label=\"No\"\n                          style={{ color: \"white\", backgroundColor: \"red\" }}\n                        />\n                      )}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </CardContent>\n      </Card>\n    </Container>\n  );\n}\n\nexport default UserTable;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport UserTable from \"../components/UserTable/index\";\nimport API from \"../utils/API\";\nimport UserContext from \"../utils/UserContext\";\n\nlet pageTitle;\n\nconst getProps = function (role) {\n  switch (role) {\n    case \"Operations Manager\":\n      pageTitle = \"Display Operators\";\n      break;\n    default:\n      pageTitle = \"Display Technicians\";\n  }\n};\n\nfunction DisplayUsers() {\n  const [users, setUsers] = useState([]);\n\n  const currentUser = useContext(UserContext);\n\n  getProps(currentUser.role);\n\n  useEffect(() => {\n    if (currentUser.role === \"Operations Manager\") {\n      API.getOperators().then((res) => {\n        setUsers(res.data);\n      });\n    } else if (currentUser.role === \"Maintenance Manager\") {\n      API.getTechnicians().then((res) => {\n        setUsers(res.data);\n      });\n    }\n  }, []);\n\n  return <UserTable users={users} pageTitle={pageTitle} />;\n}\n\nexport default DisplayUsers;\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Avatar } from '@material-ui/core'\n\nfunction VehicleAvatar (props) {\n  const useStyles = makeStyles({\n    avatar: {\n      backgroundColor: props.backgroundColor,\n      height: 100,\n      width: 100\n    },\n    img: {\n      width: props.imageWidth\n    }\n  })\n  const classes = useStyles()\n\n  return (\n    <Avatar className={classes.avatar}>\n      <img className={classes.img} src={props.icon} alt={props.type} />\n    </Avatar>\n  )\n}\n\nexport default VehicleAvatar","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  FormGroup,\n  MenuItem,\n  TextField,\n  Container,\n} from \"@material-ui/core\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"./style.css\";\nimport API from \"../../utils/API\";\n\nfunction AssignOccupantInput(props) {\n  const useStyles = makeStyles({\n    typography: {\n      marginBottom: 15,\n    },\n    formGroup: {\n      marginBottom: 15,\n    },\n    errorMessage: {\n      color: \"red\",\n    },\n  });\n  const classes = useStyles();\n\n  const UserFormSchema = Yup.object().shape({\n    occupant: Yup.string().required(\"Required\"),\n  });\n\n  return (\n    <Container maxWidth=\"xs\">\n      <Formik\n        initialValues={{\n          vehicle: props.vehicle._id,\n          occupant: \"\",\n        }}\n        validationSchema={UserFormSchema}\n        onSubmit={(values) => {\n          API.updateVehicleOccupant(values.vehicle, values.occupant)\n            .then(() => {\n              API.updateUserDismountedStatus(values.occupant, true);\n            })\n            .then(() => {\n              const targetUser = props.dismountedUsers.find((user) => {\n                return user._id === values.occupant;\n              });\n              props.updateVehicles(values.vehicle, targetUser);\n            })\n            .then(() => {\n              props.updateDismountedUsers(values.occupant);\n            });\n        }}\n      >\n        {({ errors, touched, values }) => (\n          <Form>\n            <FormGroup className={classes.formGroup}>\n              <Field name=\"occupant\" as={TextField} select label=\"Assign\">\n                {props.dismountedUsers.map((user) => (\n                  <MenuItem\n                    key={user._id}\n                    value={user._id}\n                  >{`${user.rank} ${user.firstName} ${user.lastName}`}</MenuItem>\n                ))}\n              </Field>\n              {errors.occupant && touched.occupant ? (\n                <span className={classes.errorMessage}>\n                  <ErrorMessage name=\"occupant\" />\n                </span>\n              ) : null}\n            </FormGroup>\n            <Button type=\"submit\">Assign</Button>\n            {/* <pre>{JSON.stringify(values, null, 2)}</pre>\n            <pre>{JSON.stringify(errors, null, 2)}</pre> */}\n          </Form>\n        )}\n      </Formik>\n    </Container>\n  );\n}\n\nexport default AssignOccupantInput;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Container,\n  Typography,\n  Card,\n  CardContent,\n  Chip,\n} from \"@material-ui/core\";\nimport VehicleAvatar from \"../VehicleAvatar/index\";\nimport AssignOccupantInput from \"../AssignOccupantInput\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  typography: {\n    marginBottom: 15,\n  },\n});\n\nfunction getVehicleIconBackgroundColor(vehicle) {\n  if (vehicle.repairRequests.length) {\n    if (vehicle.repairRequests.slice(-1)[0].status === \"Open\") return \"red\";\n    else if (vehicle.repairRequests.slice(-1)[0].status === \"Work In Progress\")\n      return \"gold\";\n  }\n  return \"green\";\n}\n\nfunction VehicleTable(props) {\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Card>\n        <CardContent>\n          <Typography variant=\"h4\" className={classes.typography}>\n            {props.pageTitle}\n          </Typography>\n          <TableContainer>\n            <Table className={classes.table} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Icon</TableCell>\n                  <TableCell align=\"right\">Call Sign</TableCell>\n                  <TableCell align=\"right\">Registration Number</TableCell>\n                  <TableCell align=\"right\">Type</TableCell>\n                  <TableCell align=\"right\">Occupant</TableCell>\n                  <TableCell align=\"right\">Serviceable</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {props.vehicles.map((vehicle) => (\n                  <TableRow key={vehicle._id}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      <VehicleAvatar\n                        icon={vehicle.iconSrc}\n                        alt={vehicle.type}\n                        backgroundColor={getVehicleIconBackgroundColor(vehicle)}\n                        imageWidth={80}\n                      />\n                    </TableCell>\n                    <TableCell align=\"right\">{vehicle.callSign}</TableCell>\n                    <TableCell align=\"right\">\n                      {vehicle.registrationNumber}\n                    </TableCell>\n                    <TableCell align=\"right\">{vehicle.type}</TableCell>\n                    <TableCell align=\"right\">\n                      {vehicle.occupant ? (\n                        `${vehicle.occupant.rank} ${vehicle.occupant.firstName} ${vehicle.occupant.lastName}`\n                      ) : (\n                        <AssignOccupantInput\n                          dismountedUsers={props.dismountedUsers}\n                          vehicle={vehicle}\n                          updateVehicles={props.updateVehicles}\n                          updateDismountedUsers={props.updateDismountedUsers}\n                        />\n                      )}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      {vehicle.serviceable ? (\n                        <Chip\n                          label=\"Yes\"\n                          style={{ color: \"white\", backgroundColor: \"green\" }}\n                        />\n                      ) : (\n                        <Chip\n                          label=\"No\"\n                          style={{ color: \"white\", backgroundColor: \"red\" }}\n                        />\n                      )}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </CardContent>\n      </Card>\n    </Container>\n  );\n}\n\nexport default VehicleTable;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport VehicleTable from \"../components/VehicleTable/index\";\nimport API from \"../utils/API\";\nimport UserContext from \"../utils/UserContext\";\n\nlet pageTitle;\n\nconst getProps = function (role) {\n  switch (role) {\n    case \"Operations Manager\":\n      pageTitle = \"Display Operator Vehicles\";\n      break;\n    default:\n      pageTitle = \"Display Technician Vehicles\";\n  }\n};\n\nfunction DisplayVehicles() {\n  const [vehicles, setVehicles] = useState([]);\n  const [dismountedUsers, setDismountedUsers] = useState([]);\n\n  const currentUser = useContext(UserContext);\n\n  getProps(currentUser.role);\n\n  useEffect(() => {\n    if (currentUser.role === \"Operations Manager\") {\n      API.getOperatorVehicles()\n        .then((res) => {\n          setVehicles(res.data);\n        })\n        .then(() => {\n          API.getDismountedOperators().then((res) => {\n            setDismountedUsers(res.data);\n          });\n        });\n    } else if (currentUser.role === \"Maintenance Manager\") {\n      API.getTechnicianVehicles()\n        .then((res) => {\n          setVehicles(res.data);\n        })\n        .then(() => {\n          API.getDismountedTechnicians().then((res) => {\n            setDismountedUsers(res.data);\n          });\n        });\n    }\n  }, []);\n\n  function updateVehicles(vehicleId, userObject) {\n    let newVehicles = [...vehicles];\n    const targetVehicle = newVehicles.find((vehicle) => {\n      return vehicle._id === vehicleId;\n    });\n    targetVehicle.occupant = userObject;\n    setVehicles(newVehicles);\n  }\n\n  function updateDismountedUsers(userId) {\n    const newDismountedUsers = dismountedUsers.filter((user) => {\n      return user._id !== userId;\n    });\n    setDismountedUsers(newDismountedUsers);\n  }\n\n  return (\n    <VehicleTable\n      vehicles={vehicles}\n      pageTitle={pageTitle}\n      dismountedUsers={dismountedUsers}\n      updateVehicles={updateVehicles}\n      updateDismountedUsers={updateDismountedUsers}\n    />\n  );\n}\n\nexport default DisplayVehicles;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  FormGroup,\n  MenuItem,\n  TextField,\n  Container,\n} from \"@material-ui/core\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"./style.css\";\nimport API from \"../../utils/API\";\n\nfunction AssignTechnicianInput(props) {\n  const useStyles = makeStyles({\n    typography: {\n      marginBottom: 15,\n    },\n    formGroup: {\n      marginBottom: 15,\n    },\n    errorMessage: {\n      color: \"red\",\n    },\n  });\n  const classes = useStyles();\n\n  const UserFormSchema = Yup.object().shape({\n    technician: Yup.string().required(\"Required\"),\n  });\n\n  return (\n    <Container maxWidth=\"xs\">\n      <Formik\n        initialValues={{\n          repairRequest: props.repairRequest._id,\n          technician: \"\",\n        }}\n        validationSchema={UserFormSchema}\n        onSubmit={(values) => {\n          API.updateRepairRequestAssignedTo(\n            values.repairRequest,\n            values.technician\n          )\n            .then(() => {\n              API.updateUserAvailableStatus(values.technician, false);\n            })\n            .then(() => {\n              props.availableTechnicians.map((technician) => {\n                if (technician._id === values.technician) {\n                  props.updateVehicles(\n                    values.repairRequest,\n                    technician,\n                    \"Work In Progress\"\n                  );\n                }\n              });\n            })\n            .then(() => {\n              props.updateAvailableTechnicians(values.technician);\n            })\n            .then(() => {\n              API.updateRepairRequestStatus(\n                values.repairRequest,\n                \"Work In Progress\"\n              );\n            });\n        }}\n      >\n        {({ errors, touched, values }) => (\n          <Form>\n            <FormGroup className={classes.formGroup}>\n              <Field name=\"technician\" as={TextField} select label=\"Assign\">\n                {props.availableTechnicians.map((user) => (\n                  <MenuItem\n                    key={user._id}\n                    value={user._id}\n                  >{`${user.rank} ${user.firstName} ${user.lastName}`}</MenuItem>\n                ))}\n              </Field>\n              {errors.technician && touched.technician ? (\n                <span className={classes.errorMessage}>\n                  <ErrorMessage name=\"technician\" />\n                </span>\n              ) : null}\n            </FormGroup>\n            <Button type=\"submit\">Assign</Button>\n            {/* <pre>{JSON.stringify(values, null, 2)}</pre>\n            <pre>{JSON.stringify(errors, null, 2)}</pre> */}\n          </Form>\n        )}\n      </Formik>\n    </Container>\n  );\n}\n\nexport default AssignTechnicianInput;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Container,\n  Typography,\n  Card,\n  CardContent,\n  Chip,\n  Button,\n} from \"@material-ui/core\";\nimport AssignTechnicianInput from \"../AssignTechnicianInput\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  typography: {\n    marginBottom: 15,\n  },\n});\n\nfunction RepairRequestTable(props) {\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Card>\n        <CardContent>\n          <Typography variant=\"h4\" className={classes.typography}>\n            Display Repair Requests\n          </Typography>\n          {props.vehicles.length === 0 ? (\n            <Typography\n              variant=\"h6\"\n              className={classes.typography}\n              style={{ marginBottom: 0 }}\n            >\n              No Repair Requests to display.\n            </Typography>\n          ) : (\n            <TableContainer>\n              <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Number</TableCell>\n                    <TableCell align=\"right\">Vehicle Call Sign</TableCell>\n                    <TableCell align=\"right\">Vehicle Type</TableCell>\n                    <TableCell align=\"right\">Occupant</TableCell>\n                    <TableCell align=\"right\">Description</TableCell>\n                    <TableCell align=\"right\">\n                      Estimated Condition Class\n                    </TableCell>\n                    <TableCell align=\"right\">Vehicle Can Be Moved By</TableCell>\n                    <TableCell align=\"right\">\n                      Local Tactical Situation\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      Crew Remained With Vehicle\n                    </TableCell>\n                    <TableCell align=\"right\">Location</TableCell>\n                    <TableCell align=\"right\">Status</TableCell>\n                    <TableCell align=\"right\">Assigned To</TableCell>\n                    <TableCell align=\"right\">Repair Work Order</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.vehicles.map((vehicle) =>\n                    vehicle.repairRequests.map((repairRequest) => (\n                      <TableRow key={repairRequest._id}>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {repairRequest.number}\n                        </TableCell>\n                        <TableCell align=\"right\">{vehicle.callSign}</TableCell>\n                        <TableCell align=\"right\">{vehicle.type}</TableCell>\n                        <TableCell align=\"right\">\n                          {vehicle.occupant.rank} {vehicle.occupant.firstName}{\" \"}\n                          {vehicle.occupant.lastName}\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {repairRequest.description}\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {repairRequest.estimatedConditionClass}\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {repairRequest.vehicleCanBeMovedBy}\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {repairRequest.localTacticalSituation === \"Safe\" ? (\n                            <Chip\n                              label=\"Safe\"\n                              style={{\n                                color: \"white\",\n                                backgroundColor: \"green\",\n                              }}\n                            />\n                          ) : (\n                            <Chip\n                              label=\"Hostile\"\n                              style={{ color: \"white\", backgroundColor: \"red\" }}\n                            />\n                          )}\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {repairRequest.crewRemainedWithVehicle ? (\n                            <Chip\n                              label=\"Yes\"\n                              style={{\n                                color: \"white\",\n                                backgroundColor: \"green\",\n                              }}\n                            />\n                          ) : (\n                            <Chip\n                              label=\"No\"\n                              style={{ color: \"white\", backgroundColor: \"red\" }}\n                            />\n                          )}\n                        </TableCell>\n                        <TableCell>\n                          {repairRequest.location.latitude},{\" \"}\n                          {repairRequest.location.longitude}\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {repairRequest.status === \"Open\" ? (\n                            <Chip\n                              label=\"Open\"\n                              style={{ color: \"white\", backgroundColor: \"red\" }}\n                            />\n                          ) : repairRequest.status === \"Work In Progress\" ? (\n                            <Chip\n                              label=\"Work In Progress\"\n                              style={{\n                                color: \"black\",\n                                backgroundColor: \"gold\",\n                              }}\n                            />\n                          ) : (\n                            <Chip\n                              label=\"Complete\"\n                              style={{\n                                color: \"white\",\n                                backgroundColor: \"green\",\n                              }}\n                            />\n                          )}\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {repairRequest.assignedTo === undefined &&\n                          props.user.role === \"Operator\" ? (\n                            \"Technician not yet assigned\"\n                          ) : repairRequest.assignedTo ? (\n                            `${repairRequest.assignedTo.rank} ${repairRequest.assignedTo.firstName} ${repairRequest.assignedTo.lastName}`\n                          ) : props.availableTechnicians.length === 0 ? (\n                            \"No available Technicians\"\n                          ) : (\n                            <AssignTechnicianInput\n                              repairRequest={repairRequest}\n                              availableTechnicians={props.availableTechnicians}\n                              updateVehicles={props.updateVehicles}\n                              updateAvailableTechnicians={\n                                props.updateAvailableTechnicians\n                              }\n                            />\n                          )}\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {repairRequest.repairWorkOrder === undefined ? (\n                            \"Repair Work Order not yet created\"\n                          ) : repairRequest.repairWorkOrder.status ===\n                            \"Open\" ? (\n                            <Chip\n                              label=\"Open\"\n                              style={{ color: \"white\", backgroundColor: \"red\" }}\n                            />\n                          ) : repairRequest.repairWorkOrder.status ===\n                            \"Work In Progress\" ? (\n                            <Chip\n                              label=\"Work In Progress\"\n                              style={{\n                                color: \"black\",\n                                backgroundColor: \"gold\",\n                              }}\n                            />\n                          ) : (\n                            <Chip\n                              label=\"Complete\"\n                              style={{\n                                color: \"white\",\n                                backgroundColor: \"green\",\n                              }}\n                            />\n                          )}\n                        </TableCell>\n                      </TableRow>\n                    ))\n                  )}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )}\n        </CardContent>\n      </Card>\n    </Container>\n  );\n}\n\nexport default RepairRequestTable;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport RepairRequestTable from \"../components/RepairRequestTable/index\";\nimport API from \"../utils/API\";\nimport UserContext from \"../utils/UserContext\";\n\nfunction DisplayRepairRequests() {\n  const [vehicles, setVehicles] = useState([]);\n  const [availableTechnicians, setAvailableTechnicians] = useState([]);\n\n  const currentUser = useContext(UserContext);\n\n  useEffect(() => {\n    API.getVehicles()\n      .then((res) => {\n        let filteredVehicles = [];\n        if (currentUser.role === \"Maintenance Manager\") {\n          filteredVehicles = res.data.filter((vehicle) => {\n            return vehicle.repairRequests.length !== 0;\n          });\n        } else if (currentUser.role === \"Technician\") {\n          res.data.forEach((vehicle) => {\n            vehicle.repairRequests.forEach((repairRequest) => {\n              if (\n                repairRequest.assignedTo &&\n                repairRequest.assignedTo._id === currentUser._id\n              )\n                filteredVehicles.push(vehicle);\n            });\n          });\n        } else if (currentUser.role === \"Operator\") {\n          res.data.forEach((vehicle) => {\n            if (vehicle.occupant && vehicle.occupant._id === currentUser._id)\n              filteredVehicles.push(vehicle);\n          });\n        }\n        console.log(filteredVehicles);\n        setVehicles(filteredVehicles);\n      })\n      .then(() => {\n        API.getAvailableTechnicians().then((res) => {\n          setAvailableTechnicians(res.data);\n        });\n      });\n  }, []);\n\n  function updateVehicles(repairRequestId, userObject, status) {\n    let newVehicles = [...vehicles];\n    newVehicles.map((vehicle) => {\n      if (vehicle.repairRequests) {\n        vehicle.repairRequests.map((repairRequest) => {\n          if (repairRequest._id === repairRequestId) {\n            repairRequest.assignedTo = userObject;\n            repairRequest.status = status;\n          }\n        });\n      }\n    });\n    setVehicles(newVehicles);\n  }\n\n  function updateAvailableTechnicians(userId) {\n    const newAvailableTechnicians = availableTechnicians.filter(\n      (technician) => {\n        return technician._id !== userId;\n      }\n    );\n    setAvailableTechnicians(newAvailableTechnicians);\n  }\n\n  return (\n    <RepairRequestTable\n      user={currentUser}\n      vehicles={vehicles}\n      availableTechnicians={availableTechnicians}\n      updateVehicles={updateVehicles}\n      updateAvailableTechnicians={updateAvailableTechnicians}\n    />\n  );\n}\n\nexport default DisplayRepairRequests;\n","// bring in all the react related\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n// bring in all the pages\n\nimport Login from \"./pages/Login\";\nimport Profile from \"./pages/Profile\";\n\nimport CreateRepairRequest from \"./pages/CreateRepairRequest\";\nimport CreateRepairWorkOrder from \"./pages/CreateRepairWorkOrder\";\n// bring in all the components\nimport LayoutCanvas from \"./components/LayoutCanvas\";\nimport Unauthorized from \"./components/Unauthorized\";\nimport WelcomeAlbum from \"./components/WelcomeAlbum\";\n// bring in all the global css\nimport \"./App.css\";\n// bring in all the contexts\nimport Dashboard from \"./components/Dashboard\";\nimport UserContext from \"./utils/UserContext\";\nimport CreateUser from \"./pages/CreateUser\";\nimport CreateVehicle from \"./pages/CreateVehicle\";\nimport DisplayUsers from \"./pages/DisplayUsers\";\nimport DisplayVehicles from \"./pages/DisplayVehicles\";\nimport DisplayRepairRequests from \"./pages/DisplayRepairRequests\";\n// import DisplayRepairRequests from \"./pages/DisplayRepairWorkOrders\";\nimport API from \"./utils/API\";\n// import DisplayRepairWorkOrders from \"./pages/DisplayRepairWorkOrders\";\n\nfunction App() {\n  const [userState, setUserState] = useState({});\n\n  // check server session for user info when page is opened\n  // login the user if logged in before\n  useEffect(() => {\n    API.isLoggedIn()\n      .then((res) => {\n        if (res.data.user) {\n          setUserState(res.data.user);\n        }\n      })\n      .catch((err) => {\n        throw new Error(err);\n      });\n  }, []);\n\n  // Handles updating component state when the user types into the login form\n  function handleLogin(data) {\n    setUserState(data);\n  }\n\n  return (\n    <Router>\n      <UserContext.Provider value={userState}>\n        {/* render login form if not logged in  */}\n        {!userState._id && <Login handleLogin={handleLogin} />}\n        {/* render the dashbord and other pages if logged in  */}\n        {userState._id && (\n          <LayoutCanvas>\n            <Switch>\n              <Route exact path=\"/\" component={WelcomeAlbum} />\n              <Route exact path=\"/dashboard\">\n                {userState.role === \"Maintenance Manager\" ? (\n                  <Dashboard />\n                ) : (\n                  <Unauthorized />\n                )}\n              </Route>\n              <Route path=\"/display-users\">\n                {userState.role === \"Operations Manager\" ||\n                userState.role === \"Maintenance Manager\" ? (\n                  <DisplayUsers />\n                ) : (\n                  <Unauthorized />\n                )}\n              </Route>\n              <Route path=\"/display-vehicles\">\n                {userState.role === \"Operations Manager\" ||\n                userState.role === \"Maintenance Manager\" ? (\n                  <DisplayVehicles />\n                ) : (\n                  <Unauthorized />\n                )}\n              </Route>\n              <Route path=\"/display-repairRequests\">\n                {userState.role !== \"Operations Manager\" ? (\n                  <DisplayRepairRequests />\n                ) : (\n                  <Unauthorized />\n                )}\n              </Route>\n              <Route path=\"/display-repairWorkorders\">\n                {userState.role === \"Technician\" ||\n                userState.role === \"Maintenance Manager\" ? (\n                  <></>\n                ) : (\n                  <Unauthorized />\n                )}\n              </Route>\n              <Route path=\"/create-repair-request\">\n                {userState.role === \"Operator\" ? (\n                  <CreateRepairRequest />\n                ) : (\n                  <Unauthorized />\n                )}\n              </Route>\n              <Route path=\"/create-repairWorkorder\">\n                {userState.role === \"Technician\" ? (\n                  <CreateRepairWorkOrder />\n                ) : (\n                  <Unauthorized />\n                )}\n              </Route>\n              <Route path=\"/create-user\">\n                {userState.role === \"Operations Manager\" ||\n                userState.role === \"Maintenance Manager\" ? (\n                  <CreateUser />\n                ) : (\n                  <Unauthorized />\n                )}\n              </Route>\n              <Route path=\"/create-vehicle\">\n                {userState.role === \"Operations Manager\" ||\n                userState.role === \"Maintenance Manager\" ? (\n                  <CreateVehicle />\n                ) : (\n                  <Unauthorized />\n                )}\n              </Route>\n              <Route path=\"/profile\" component={Profile} />\n            </Switch>\n          </LayoutCanvas>\n        )}\n      </UserContext.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}